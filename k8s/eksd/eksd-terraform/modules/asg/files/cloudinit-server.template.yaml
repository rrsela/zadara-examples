#cloud-config
write_files:
  - path: /etc/kubernetes/zadara/cloud-config.yaml
    owner: root:root
    permissions: '0644'
    content: |
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: cloud-config
      data:
        cloud.conf: |
          [Global]
            Zone=eu-west-1a
          [ServiceOverride "ec2"]
            Service=ec2
            Region=eu-west-1
            URL=https://${ api_url }/api/v2/aws/ec2
            SigningRegion=eu-west-1
          [ServiceOverride "autoscaling"]
            Service=autoscaling
            Region=eu-west-1
            URL=https://${ api_url }/api/v2/aws/autoscaling
            SigningRegion=eu-west-1
          [ServiceOverride "elasticloadbalancing"]
            Service=elasticloadbalancing
            Region=eu-west-1
            URL=https://${ api_url }/api/v2/aws/elbv2
            SigningRegion=eu-west-1
  - path: /etc/kubernetes/zadara/values-aws-cloud-controller.yaml
    owner: root:root
    permissions: '0644'
    content: |
      args:
        - --v=2
        - --cloud-provider=aws
        - --cloud-config=config/cloud.conf
        - --allocate-node-cidrs=false
        - --cluster-cidr=${ pod_network }
        - --cluster-name=${ cluster_name }
        - --configure-cloud-routes=false
      image:
          tag: ${ controller_image_version }
      cloudConfigPath: config/cloud.conf
      extraVolumes:
        - name: cloud-config
          configMap:
            name: cloud-config
      extraVolumeMounts:
        - name: cloud-config
          mountPath: config
  - path: /etc/kubernetes/zadara/values-aws-ebs-csi-driver.yaml
    owner: root:root
    permissions: '0644'
    content: |
      controller:
        env:
          - name: AWS_EC2_ENDPOINT
            value: 'https://${ api_url }/api/v2/aws/ec2'
          - name: AWS_REGION
            value: 'symphony'
  - path: /etc/cron.d/eksd-reload-certs
    owner: root:root
    permissions: '0644'
    content: "0 */1 * * * root kubeadm init phase upload-certs --upload-certs --certificate-key ${ certificate } \n"
  - path: /etc/kubernetes/zadara/kubeadm-config.yaml
    owner: root:root
    permissions: '0644'
    content: |
      apiVersion: kubeadm.k8s.io/v1beta3
      kind: InitConfiguration
      bootstrapTokens:
        - token: "${ token }"
          description: "predefined kubeadm bootstrap token that never expires"
          ttl: "0"
      certificateKey: "${ certificate }"
      ---
      apiVersion: kubeadm.k8s.io/v1beta3
      kind: ClusterConfiguration
      networking:
        podSubnet: "${ pod_network }"
      kubernetesVersion: "KUBE_VER"
      controlPlaneEndpoint: "${ server_url }"
      apiServer:
        certSANs:
          %{~ for single_san in san ~}
          - ${ single_san }
          %{~ endfor ~}
      imageRepository: "public.ecr.aws/eks-distro/kubernetes"
      clusterName: "${ cluster_name }"
